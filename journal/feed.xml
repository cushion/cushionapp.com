<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xml:base="http://cushionapp.com">
  <channel>
    <title>Cushion</title>
    <link>http://cushionapp.com</link>
    <description></description>
    <pubDate>Mon, 16 Mar 2015 03:53:22 +0000</pubDate>
    
    <item>
      <title>Everything in Increments</title>
      <link>http://cushionapp.com/journal/everything-in-increments</link>
      <pubDate>Mon, 02 Mar 2015 09:13:00 -0500</pubDate>
      <author>Jonnie Hallman</author>
      <guid>http://cushionapp.com/journal/everything-in-increments</guid>
      <description>&lt;p&gt;If you’ve built anything of scale before, you know that it’s best to build in increments. Even if you haven’t built anything, but rather attempted to accomplish an overwhelming task, you know how important it is to break larger problems into smaller, more manageable ones. This has been on the top of my mind lately because it’s how I’ve had to build Cushion, and every other app—releasing in small increments, but focused on the longterm goal.&lt;/p&gt;

&lt;p&gt;Specifically, incremental building has played an essential role in how I release Cushion to more people. I’ve been especially slow and steady with this, simply because I’m in no rush. I like to react while I’m still able to breathe—it allows me to respond conscientiously rather than hastily plugging leaks. I’ve been a part of a few proper launches in the past and I want to avoid the panic and scramble of opening the flood gates all at once. Here’s how I’ve been able to do that.&lt;/p&gt;

&lt;p&gt;After spending a couple months building out the basic concept of Cushion, with the ability to add projects and see something in return, I decided it was time to put other people behind the wheel. Since I’m in a co-working space with a dozen other freelancers, I have the convenience of walking up to one of them, setting them up with an account, and seeing what happens. These were my “Alpha” users.&lt;/p&gt;

&lt;p&gt;As you can imagine, they immediately found all the painfully obvious issues with Cushion. When you work alone on something for an extended period of time, it’s easy to miss the problems that everyone else will hit on day one. Watching other people use Cushion for the first time was a test of my patience—sitting there, not interfering, just watching. We’d then discuss the problems, the possible solutions, and I’d return later that day with a new version to try out. This worked incredibly well.&lt;/p&gt;

&lt;p&gt;After a couple more months, I felt ready to move to the next step. Instead of a dozen Americans on the east coast using the app, I wanted at least a hundred people from other timezones, with other currencies and date formats. This is when you realize your app needs to be more accommodating. &lt;/p&gt;

&lt;p&gt;I needed to open the app up to others, but I knew from my own experience as a beta user that a lot of people just want to try the new thing. 5 minutes in, they can say they tried the new thing and the database becomes a graveyard of dormant accounts. I wanted users to be invested in the app and feel motivated to thoroughly use it and provide feedback. If every user paid upfront for the beta, they would be more inclined to keep with it. If it didn’t stick with them, Cushion still benefited from their financial support.&lt;/p&gt;

&lt;p&gt;The paid beta served as an amazing resource in a variety of ways. Financially, it allowed me to only need enough client work to book 3 days a week. Every other day, I was able to focus 100% on Cushion—this was huge. &lt;/p&gt;

&lt;p&gt;As anticipated, the beta users it attracted have been incredibly involved and active—over half of them use Cushion on a regular basis. Because of this, I consistently receive great feedback that I can act on.&lt;/p&gt;

&lt;p&gt;And with paid users, the requested features aren’t the typical pie-in-the-sky kind I would get from free users—they are reasonable and inline with the direction Cushion is moving in. The roadmap has been shaped into a clear path by the people actually using the app. I’m not just thinking up features and hoping potential customers might like them—real customers are telling me exactly what they want and I work with them to find the best approach to take.&lt;/p&gt;

&lt;p&gt;Now that the first beta memberships are starting to expire, I’m looking to take the next step. Thinking in increments, I found this to be a great opportunity to offer subscriptions to both expiring beta users and new users. Expiring beta users need a way to continue using Cushion regardless, so it needs to be implemented. With minimal additional effort, this can also serve a secondary purpose of subscribing new users, which will eventually be needed once Cushion is public.&lt;/p&gt;

&lt;p&gt;The idea all along has been for beta users to carry a special status among users. Since they took a leap of faith to support such early development, I plan to reward them beyond the beta with exclusive benefits. This distinction between beta users and subscribers allows me to offer monthly and yearly subscriptions to new users alongside the beta, with these subscriptions simply offering early access.&lt;/p&gt;

&lt;p&gt;As of this weekend, the monthly and yearly subscriptions are in place and ready for new users. Several weeks from now, once I’ve ironed out the subscription process, I’ll be able to take the next step and offer trial periods. Since there’s nothing holding anyone back from signing up at that point, I’ll still use an invite system to keep the traffic to a level I can manage. And from there, if I’m ready to open the flood gates, I will.&lt;/p&gt;

&lt;p&gt;As always, if you’re interested in trying out Cushion, this time as a beta user or a monthly subscriber, &lt;a href=&quot;/beta&quot;&gt;request an invite&lt;/a&gt; and I’ll send one your way.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Deleting Your Account</title>
      <link>http://cushionapp.com/journal/deleting-your-account</link>
      <pubDate>Sat, 14 Feb 2015 19:47:00 -0500</pubDate>
      <author>Jonnie Hallman</author>
      <guid>http://cushionapp.com/journal/deleting-your-account</guid>
      <description>&lt;p&gt;This weekend, I wrapped up a “feature” that’s been at the top of my list for a while—deleting your account. It’s not an exciting feature, but certainly a necessity and one that’s very important to me. We owe it to our users to put them in complete control of their data. If they no longer want any of their data in your database, they should be able to easily delete it—not just abandon it.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/2015-02-14-tweet.png&quot; alt=&quot;2015-02-14-tweet&quot;&gt; &lt;/p&gt;

&lt;p&gt;I recently &lt;a href=&quot;https://twitter.com/destroytoday/status/563522803266502656&quot;&gt;tweeted&lt;/a&gt; about a few prerequisites I believe each app developer should build into their app before launching. I knew others felt the same, but I didn’t realize it would become my most favorited and most retweeted tweet. It’s a sign that people really care about these aspects of an app, even if they’re not the killer features one would spotlight on the product page. &lt;/p&gt;

&lt;p&gt;The ability to delete your account is especially important to me because I’ve come across so many web services that simply don’t allow it—even ones with millions of users and thousands of employees. There’s absolutely no excuse not to build support for it. In my eyes, it should be a legal requirement for anyone putting an app into the world. We’re so quick to build apps, scale them, and strive to reach exponential growth that we act like it’s a complete waste of time to spend two or three days building these features.&lt;/p&gt;

&lt;p&gt;In Cushion, I built the initial phase of a two-part plan for deleting your account. With the first beta accounts expiring soon, I needed the bare minimum in place, in case anyone wanted to call it quits. For beta users, this means simply deleting their data upon request. &lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/2015-02-14-modal.gif&quot; alt=&quot;2015-02-14-modal&quot;&gt; &lt;/p&gt;

&lt;p&gt;Within the app, the user would click a link to delete their account. This opens a modal with an explanation of what deletion entails, emphasizing the seriousness of the request—in case users simply want to cancel their subscription. The modal also suggests downloading a backup beforehand. &lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/2015-02-14-github.png&quot; alt=&quot;2015-02-14-github&quot;&gt; &lt;/p&gt;

&lt;p&gt;I followed Github’s model for confirmation by requiring users to type their email address to enable the delete button. With the past several apps I’ve built, I can’t tell you how many users “accidentally” deleted their account or deleted it assuming they could return a month later and just restore it. This also clarifies which account is being deleted, in case the user has more than one. I want the user to be fully aware that they are about to delete their account. &lt;/p&gt;

&lt;p&gt;Upon clicking the delete button, the user’s subscription is cancelled, if one exists, and their data is deleted. That’s phase one.&lt;/p&gt;

&lt;p&gt;The plan for phase two is to provide the most thorough experience for deleting an account, covering all angles of what may potentially happen next. In case the user forgets to download a backup, the user’s data will automatically be emailed to them upon deleting their account. If they ever attempt to log into their account again, they will find a list of downloadable receipts from Cushion charges. And, for the inevitable user wanting to restore their account shortly after deleting it, accounts will be put it in a queue to be deleted 30 days later after the request. Within those 30 days, a user can restore the account and be back to using it in no time.&lt;/p&gt;

&lt;p&gt;So far, I’m happy with the first step, but look forward to building the full package. It does feel strange investing this much time in the experience of someone leaving, but I refuse to skimp on any aspect of Cushion.&lt;/p&gt;

&lt;p&gt;The beta is still going strong, so if you’re interested in participating, even just to test out deleting your account, be sure to &lt;a href=&quot;/beta&quot;&gt;request an invite&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Designing the Subscription Page</title>
      <link>http://cushionapp.com/journal/designing-the-subscription-page</link>
      <pubDate>Fri, 30 Jan 2015 09:26:00 -0500</pubDate>
      <author>Jonnie Hallman</author>
      <guid>http://cushionapp.com/journal/designing-the-subscription-page</guid>
      <description>&lt;p&gt;After months of thinking about “killer features”, I arrived at the realization that there were still a few launch prerequisites I hadn’t finished, or even started. Here I was, thinking up feature after feature, expecting to launch soon, but I still didn’t have a subscription system in place, a way of downloading your data, or the ability to delete your account. &lt;/p&gt;

&lt;p&gt;The paid beta runs on Stripe Checkout, using a one-time charge per user, which buys me exactly six months starting from the first user. Based on my past experience, I knew that time would dwindle and the expiration date would creep up faster than I would anticipate. I had to drop everything and focus on subscriptions.&lt;/p&gt;

&lt;p&gt;Since early on, I had a good idea of the direction I wanted to take with subscriptions. Instead of your typical 3-tier “solo, team, company”, I wanted to focus on the individual. I know I’m nowhere near even thinking about teams and beyond, so why even include them from the start? I do have a few small teams using the beta, and that works out really well with a single account holder, as long as they don’t need to do things like assign people to projects. For now, I’ll keep it simple.&lt;/p&gt;

&lt;p&gt;By starting with a single plan, I can break that into two options by providing a monthly option and then a discounted yearly option. You’d be surprised by how often a user would rather pay a little extra for the month-to-month flexibility, but then again, maybe it’s not surprising—think gym memberships. I’ve had one for close to a year, still paying more month-to-month, but that’s only because I didn’t know if I would continue to go for an entire year. Now that I continue to go on a consistent basis, I still prefer the flexibility of having a monthly plan.&lt;/p&gt;

&lt;p&gt;When it comes to web services or software, I always go for the yearly option because I know if I’ll use it or not from the trial and that 20% discount is tough to pass up on—especially when the cost isn’t that high. It’s usually only the services that range from $5-$50/month that offer the discounted annual plan, too. 10-20% off on a $100/year plan isn’t a big deal, but $100/month (or $1200/year) starts to add up. Or maybe they just know their audience—at a certain scale, the monthly flexibility provides more value.&lt;/p&gt;

&lt;p&gt;In any case, it was time to stop only thinking about the subscription page and start designing it. Like most things I design from scratch, I start with the whacky ideas, just to get them out of the way. I know I probably won’t go with most of them, but I know not to discredit anything without going through the motions—I’ve had too many good ideas spawn from horrible ideas. All you need is something to take you in a certain direction and you can end up nowhere near the original idea, but better off because of it.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/2015-01-30-design-1.png&quot; alt=&quot;2015-01-30-design-1&quot;&gt; &lt;/p&gt;

&lt;p&gt;I tend to roll my eyes when companies get cutesy with their name, but I thought I’d at least try pursuing “Cushion” beyond the concept of a financial cushion and more towards a pile of comfortable pillows. It was bad. &lt;/p&gt;

&lt;p&gt;The layout, the size of the type, and the icons—all bad. But that’s okay because this was my first shot with a blank canvas. It takes a bit to find a solid grounding. The goofiness of the icons made its way to the plan names, as well. Instead of saying “Monthly” and “Yearly”, I tried the playful angle, describing the user’s potential scenario.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/2015-01-30-design-2.png&quot; alt=&quot;2015-01-30-design-2&quot;&gt; &lt;/p&gt;

&lt;p&gt;From there, I moved to the expected 3-column layout with the middle one being emphasized. I also introduced a third plan for an idea I’ve had for a few years now—a service only available within a specific timeframe. The service was originally going to be for people who work on personal projects at night, but this seemed like an interesting option for full-time people who freelance at night.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/2015-01-30-design-3.png&quot; alt=&quot;2015-01-30-design-3&quot;&gt; &lt;/p&gt;

&lt;p&gt;I tried a few other variations of this layout, like reversing the fills&amp;hellip;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/2015-01-30-design-4.png&quot; alt=&quot;2015-01-30-design-4&quot;&gt; &lt;/p&gt;

&lt;p&gt;&amp;hellip;using outlines instead of solid fills&amp;hellip;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/2015-01-30-design-5.png&quot; alt=&quot;2015-01-30-design-5&quot;&gt; &lt;/p&gt;

&lt;p&gt;&amp;hellip;and introducing color. None of these were right. For one, the plans were just confusing—you really needed to read into them to see that they were actually monthly versus yearly. The icons were also too playful for Cushion and just&amp;hellip;bad. I was too hung up on having a moon icon that I forced the other two. Also, it wasn’t clear that the middle icon is a “husband” cushion and the one on the right is a neck pillow. It’s like I’m trying to tell an inside joke to a group of strangers.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/2015-01-30-design-6.png&quot; alt=&quot;2015-01-30-design-6&quot;&gt; &lt;/p&gt;

&lt;p&gt;Next, I tried a two-column layout with the third “misfit” plan underneath. I also called the plans what they were, “Monthly” and “Yearly”, and removed the pillow icons. Immediately, it felt clearer, but still not right. The “Moonlighter” plan stood out too much for a plan that I didn’t want to emphasize. I was too hung up on how cool a “night” plan and that damn moon icon!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/2015-01-30-design-7.png&quot; alt=&quot;2015-01-30-design-7&quot;&gt; &lt;/p&gt;

&lt;p&gt;I also tried a variation of this design using yearly amounts for yearly plans. I thought this would be more upfront about the real cost of each plan, but it just made them more confusing. $10 vs $96 made it seem like the monthly plan was the discounted one.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/2015-01-30-design-8.png&quot; alt=&quot;2015-01-30-design-8&quot;&gt; &lt;/p&gt;

&lt;p&gt;Because the two-column layout would be too narrow in the context of the app’s subscription page, I decided to move back to the 3-column design. I kept the moon icon to see if I could somehow make it work and added the yearly price to the one-liner of the yearly plan.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/2015-01-30-design-9.png&quot; alt=&quot;2015-01-30-design-9&quot;&gt; &lt;/p&gt;

&lt;p&gt;The yellow of the moon on white didn’t work, so I tried the dark background again—still too much emphasis. It looks so cool, though!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/2015-01-30-design-10.png&quot; alt=&quot;2015-01-30-design-10&quot;&gt;&lt;/p&gt;

&lt;p&gt;At this point, I took a step back and reminded myself that this first design is for within the app, under the subscription tab. I don’t need to be so heavy on the marketing side—it should just be an area to switch between subscriptions. Even though I think it’s a worthy concept, I decided to hold off on the “Moonlighter” plan for now. I need to work in increments rather than force all my ideas in at once. I swapped out the “Moonlighter” plan for the beta, since every user is a part of the beta. From there, they can upgrade or let the beta expire.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/2015-01-30-design-11.png&quot; alt=&quot;2015-01-30-design-11&quot;&gt; &lt;/p&gt;

&lt;p&gt;I also decided to add “ribbons” to selected plans, indicating when a plan’s subscription begins, renews, or ends. Whenever you’re dealing with payment-related parts of an app, it’s best to inform the user as much as possible about their current state. I want to do as much as I can to keep users from contacting support for questions that could easily be answered with a helpful UI, especially as a solo developer.&lt;/p&gt;

&lt;div class='video-outer'&gt;
    &lt;div class='video-inner' style='padding-bottom: 34%'&gt;
        &lt;video width=&quot;100%&quot; poster=&quot;/assets/2015-01-30-design.png&quot; autoplay=&quot;autoplay&quot; loop=&quot;loop&quot; controls=&quot;controls&quot; tabindex=&quot;0&quot;&gt;
            &lt;source src=&quot;/assets/2015-01-30-design.mp4&quot; type=&quot;video/mp4&quot; /&gt;
            &lt;source src=&quot;/assets/2015-01-30-design.ogv&quot; type=&quot;video/ogg&quot; /&gt;
            Video tag not supported. Download the video &lt;a href=&quot;/assets/2015-01-30-design.mp4&quot;&gt;here&lt;/a&gt;.
        &lt;/video&gt;
    &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;So, this is where I ended up. I’m really happy with the end result and glad I got the wackiness out of my head. The next step now, regarding subscriptions, is to design the public-facing plan page. This will need to be more than just a copy/paste job, as it has to include a list of features and FAQs, considering the potential user hasn’t used the app yet. That’s for another time, though.&lt;/p&gt;

&lt;p&gt;On a side note, I still have a few more spots in the paid beta. If you’re interested in participating, &lt;a href=&quot;/beta&quot;&gt;request an invite&lt;/a&gt; and I’ll send one your way.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Rewriting the Timeline</title>
      <link>http://cushionapp.com/journal/rewriting-the-timeline</link>
      <pubDate>Tue, 06 Jan 2015 09:25:00 -0500</pubDate>
      <author>Jonnie Hallman</author>
      <guid>http://cushionapp.com/journal/rewriting-the-timeline</guid>
      <description>&lt;p&gt;Back in December, I went down the long list of to-dos for Cushion and thought I’d tackle one I’ve wanted for a while now—&lt;a href=&quot;/journal/2012-12-02/&quot;&gt;project blocks&lt;/a&gt;. I wrote about this before and laughably estimated a few days to finish it. Any dev knows estimates are meaningless and any guess would require multiplying the original estimate several times. &lt;/p&gt;

&lt;p&gt;So here we are. It’s January and Cushion doesn’t have project blocks yet. I’m about halfway there because a few days in, I realized if I wanted to do this right, I would need to rewrite the schedule timeline. I originally wrote it for the budget, then made it work for scheduling, redesigned it a few times, added a few more elements, and rigged it to somehow work with invoices. I was left with a monster that looked nice, but felt like a long-running Jenga game. &lt;/p&gt;

&lt;p&gt;After hours of just staring at the screen, internally debating with myself, I knew rewriting the timeline was the only way. I started thinking about what the timeline even represented, now that I was months along with the beta. Does the name still make sense? Up until now, I considered anything in the top-half of Cushion to be “the timeline”—even the budget bar was a timeline to me, despite its lack of time.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/2015-01-06-graph.png&quot;&gt;&lt;img src=&quot;/assets/2015-01-06-graph.png&quot; alt=&quot;2015-01-06-graph&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This wasn’t right. I took a step back and pretended for a moment that I haven’t been working on Cushion for almost a year now. I looked at the scheduling timeline and pieced it apart. What were its components, if one were to separate it into reusable parts? It has “ticks”, or axes, at the top and bottom, but so does the budget bar. So, then the ticks shouldn’t be considered part of the timeline. I would need to step back even further.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/2015-01-06-timeline.png&quot;&gt;&lt;img src=&quot;/assets/2015-01-06-timeline.png&quot; alt=&quot;2015-01-06-timeline&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Remove the ticks, remove the container, and you have the timeline on its own. And, the budget bar without the ticks and container is just the bar. Both of these are just visuals that could stand on their own, but are even more useful when adding the grounding and labeling of the container and ticks. It’s almost like a graph&amp;hellip; Wait, it is a graph! A graph has axes and visuals—so do the schedule timeline and budget bar. I can’t believe I didn’t see it this way at first, but once I did, everything came together.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/2015-01-06-shapes.png&quot;&gt;&lt;img src=&quot;/assets/2015-01-06-shapes.png&quot; alt=&quot;2015-01-06-shapes&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Instead of giving meaning to everything in the timeline, like outlined dots for estimated dates and solid dots for actual dates, I would remove the context completely and treat it like a real graph. These dots are just dots with an x-position—nothing more. An outlined dot is a “weak” dot; a solid dot is a “strong” dot. The lines that were once named after their data, like duration, delay, drag, etc., are now just lines with an x-position and a length. The arrows that once represented the current date of an active project now have no idea they represent anything—they’re just arrows. &lt;/p&gt;

&lt;p&gt;The more I abstracted the timeline, the easier it became to write both the logic and the styling. Previously, I had tons of CSS classes, like &lt;code&gt;.estimated-start-dot&lt;/code&gt; and &lt;code&gt;.remaining-duration-line&lt;/code&gt;—many of which shared the same qualities, like both delayed projects and early invoices being a light line. Now I didn’t need to be that descriptive. As a result, the style code was reduced to a fraction of what is was before.&lt;/p&gt;

&lt;p&gt;Instead of bundling all the logic within the timeline, I pulled it all out and left the timeline with one job—draw. I would no longer feed it projects and invoices. I would just send it points. Then, outside the timeline, the real logic would live in factories and generate the points for the timeline. The timeline now has absolutely no concept of anything besides drawing shapes between two points and I can easily swap out the data I send it between clients, projects, and invoices. &lt;/p&gt;

&lt;p&gt;I know abstraction is programming 101, but when you start a project and rapidly develop it as the idea grows, it’s hard to predict where the project is going. It’s even harder to take time to step back and reassess everything. I got to the point where the only way to proceed without a constant headache would be to rewrite the timeline. &lt;/p&gt;

&lt;p&gt;Looking back, as soon as I decided I would need a second timeline for invoices, I should’ve stopped and realized I shouldn’t try to make the timeline do everything. It became too much and resulted in me unexpectedly losing a couple weeks of forward progress. On the bright side, I now have a solid system in place for future “graphs”. Schedule timelines and budget bars are just the beginning.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Restructuring the Individual Project Page</title>
      <link>http://cushionapp.com/journal/restructuring-the-individual-project-page</link>
      <pubDate>Wed, 10 Dec 2014 09:22:00 -0500</pubDate>
      <author>Jonnie Hallman</author>
      <guid>http://cushionapp.com/journal/restructuring-the-individual-project-page</guid>
      <description>&lt;p&gt;In the &lt;a href=&quot;/journal/2012-12-02/&quot;&gt;last post&lt;/a&gt;, I wrote about the plan to introduce project blocks—a way to divide projects into smaller segments that could represent phases or show the varying intensity throughout a project. This plan assumed that all the groundwork had been done and I could just implement the feature. Not so fast.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/2014-10-10-old-project-page.png&quot; alt=&quot;2014-10-10-old-project-page&quot;&gt; &lt;/p&gt;

&lt;p&gt;As soon as I finished writing the post and started working on project blocks, I realized that Cushion would need considerable restructuring—specifically, on the individual project page. At the time, clicking a project link would take you directly to the form to edit the project. The project’s invoices were below the form and this always bothered me because I knew that if I ever added one more piece, this page would be too overwhelming to keep as one.&lt;/p&gt;

&lt;p&gt;The time had come. With project blocks, I had a new resource to consider, like invoices in the budget view. This association actually introduced a clear direction to take with restructuring. If the budgeting view has invoices, then the scheduling view could have blocks.&lt;/p&gt;

&lt;p&gt;Early on, I knew it would be useful to carry the budget/schedule views into individual pages, but the question of how to handle the form always remained the issue. Now that I had more useful information to display, like delay, drag, and estimate difference, I could easily populate a couple more pages and extract the form as its own page.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/2014-10-10-edit-link.png&quot; alt=&quot;2014-10-10-edit-link&quot;&gt; &lt;/p&gt;

&lt;p&gt;The structure was crystal clear. Clicking a project link would take you to the project, but maintain the view you are in—schedule or budget. Then, within either of those pages, you could click an “edit project” link, which would take you to the project’s edit page. Even though this is an extra click to edit the project, it’s apparent that the majority of users don’t edit a project much beyond marking it as finished.&lt;/p&gt;

&lt;p&gt;Now that I had the structure in place, what would I put in the scheduling and budgeting views? I had a good amount of data to choose from, but really needed to narrow it down. I didn’t want each page to become another overwhelming mess.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/2014-10-10-budget-data.png&quot; alt=&quot;2014-10-10-budget-data&quot;&gt; &lt;/p&gt;

&lt;p&gt;The budget view was easier because I had less data points to work with and they were all currency-based. I could leave the income estimate as-is because it has enough value on its own. For the invoice amounts, I already had the paid total and invoiced total below each invoice table, so an obvious higher-level piece of data would simply be a total of all the invoices. If the user needs to dig deeper, they can just scroll down to the tables.&lt;/p&gt;

&lt;p&gt;Lastly, I re-introduced the estimate difference. I previously had this on the projects page, but felt that it detracted from the summary feel—it was too detailed a value to show in a list of projects. With just one project to focus on, however, it’s perfect. This time, I wasn’t limited for room, so I maintained the currency format for the main estimate difference value and calculated its percentage as a less-emphasized value below it.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/2014-10-10-budget-timeline.png&quot; alt=&quot;2014-10-10-budget-timeline&quot;&gt; &lt;/p&gt;

&lt;p&gt;As for the budget timeline, I realized I could take this opportunity to provide much more value to the user by forgeting the financial goals of the current timeline. Instead, I could use the project’s estimate as the goal and fill up the bar with its individual invoices. This would allow the user to see a more segmented view of the income and click into each invoice if a change were needed. For the timeline labels, I use the invoice number. If one doesn’t exist, I fall back to its date—either the issued date for unpaid invoices or the paid date for paid invoices.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/2014-10-10-budget-view.png&quot; alt=&quot;2014-10-10-budget-view&quot;&gt; &lt;/p&gt;

&lt;p&gt;To wrap it all together, above is the final budget view.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/2014-10-10-schedule-data.png&quot; alt=&quot;2014-10-10-schedule-data&quot;&gt; &lt;/p&gt;

&lt;p&gt;The schedule view wasn’t nearly as easy to lay out, but I knew I had to at least show the delay, drag, and duration. That didn’t leave me with much room for more, so I took advantage of the scenarios when no data existed for these values. &lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/2014-10-10-estimated-start.png&quot; alt=&quot;2014-10-10-estimated-start&quot;&gt; &lt;/p&gt;

&lt;p&gt;If a project hasn’t started, its delay cannot be calculated, so I leave a dash in its place. Same goes for unfinished projects with drag and duration. Because a dash barely takes up any space, I know for sure I have enough room for an extra column.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/2014-10-10-estimated-finish.png&quot; alt=&quot;2014-10-10-estimated-finish&quot;&gt; &lt;/p&gt;

&lt;p&gt;The benefit of this extra column makes absolute sense, too—it’s not just a space to shove more data. Considering the column will only appear for unstarted or unfinished projects, I can show the estimated start date for unstarted projects and the estimated finish date for unfinished projects. If I’m waiting on a project to start, I want to know when it might start and if I’m in the thick of things with an existing project, I want to know when it’s expected to wrap up.&lt;/p&gt;

&lt;p&gt;With a small last touch, I took advantage of using a secondary value once again to show the date range of a finished project just below its duration. Now a user can look at one place on the screen and see when a project started, when it ended, and how long it took.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/2014-10-10-schedule-timeline.png&quot; alt=&quot;2014-10-10-schedule-timeline&quot;&gt; &lt;/p&gt;

&lt;p&gt;As for the schedule timeline, I wanted to show the entirety of the project, but knew the existing design would be humorously small on its own. Luckily, I’ve been working with EMs the whole time, so I was able to double the font size of the timeline and everything scaled perfectly. I also vertically aligned the project, since I knew I wouldn’t need to stack anything on top of it.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/2014-10-10-blocks.png&quot; alt=&quot;2014-10-10-blocks&quot;&gt; &lt;/p&gt;

&lt;p&gt;Above is the final schedule view along with the upcoming project blocks. I’m not 100% finished, but far enough along that I’m excited to show it off.&lt;/p&gt;

&lt;p&gt;If you’re still reading this and interested in participating in the Cushion beta, you can request an invite &lt;a href=&quot;/beta&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Project Blocks</title>
      <link>http://cushionapp.com/journal/project-blocks</link>
      <pubDate>Tue, 02 Dec 2014 10:32:00 -0500</pubDate>
      <author>Jonnie Hallman</author>
      <guid>http://cushionapp.com/journal/project-blocks</guid>
      <description>&lt;p&gt;I realized I’ve been writing after-the-fact lately—reviewing past work instead of talking through upcoming features I need to tackle. Today, I’m going to focus on what’s next for Cushion. &lt;/p&gt;

&lt;p&gt;Up until now, Cushion has been very much an overview of the project schedule. You specify estimated start and end dates along with actual start and end dates, then Cushion draws it on the timeline and tells you more about the edges—whether the project was delayed or if it dragged on too long. But, what about the in-between? &lt;/p&gt;

&lt;p&gt;There are three things to look at. 1) What’s the intensity of the project?—is it 24/7 startup hours or only a few days a week? 2) Does the project have a consistent schedule or are there gaps where you’re waiting on the client? 3) Does the project go from start to finish or does it have phases? The problem with the current timeline lies in the latter half of these scenarios. The visuals lead you to believe that every project is full-time. &lt;/p&gt;

&lt;p&gt;This innaccuracy kills me, and it goes against one of Cushion’s underlying principles—don’t rely on the user to calculate. Too many services display data and leave it up to the user to find the valuable conclusions. With Cushion, I want the user to take one look and instantly experience that ah-ha moment.&lt;/p&gt;

&lt;p&gt;So, what’s my solution to all of this? I call them “Project Blocks”. Let’s say you create a new project. By default, this project starts with one block spanning the entire project. You can then add more blocks based on your situation. If you’re an illustrator, you can create several new blocks and label them “Sketches”, “Revisions”, and “Final”. If you’re a developer with gaps in the timeline between sprints, you can create blocks to indicate when you’re actually working.&lt;/p&gt;

&lt;p&gt;This idea has been in the back of my head for a few months now, so I’m really excited to dive into it. I’ll start on initial designs today and transition into dev before the week is out. If you have any thoughts of your own, I’d love to &lt;a href=&quot;http://twitter.com/cushionapp&quot;&gt;hear&lt;/a&gt; them. And, if you’re interested in trying out project blocks before anyone else, &lt;a href=&quot;/beta&quot;&gt;sign up&lt;/a&gt; for the beta.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Redesigning the Homepage</title>
      <link>http://cushionapp.com/journal/redesigning-the-homepage</link>
      <pubDate>Thu, 20 Nov 2014 09:39:00 -0500</pubDate>
      <author>Jonnie Hallman</author>
      <guid>http://cushionapp.com/journal/redesigning-the-homepage</guid>
      <description>&lt;p&gt;After about 7 months of working on Cushion, I realized I hadn’t updated the homepage since coming up with the idea for the app. It still included a sentence saying “I can’t wait to build this app.” This threw people off because they would see that without seeing any other progress and just assume that it hasn’t been built yet—in their eyes, I just launched that page. &lt;/p&gt;

&lt;p&gt;This happens too often—I’m working non-stop on a project, living with it day after day, but completely unaware that maybe not everyone’s dialed in, looking over my shoulder. I assume they’ve seen every tweet and every blog post. This couldn’t be further from the truth. I still have close friends who don’t know I’m freelancing again, let alone working on Cushion.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/2014-11-20-homepage.png&quot; alt=&quot;2014-11-20-homepage&quot;&gt; &lt;/p&gt;

&lt;p&gt;So, it was time. Instead of focusing all of my attention on the app, I needed to dedicate some time to the outward-facing side of Cushion. Since I still have much to do in the app, I gave myself a limit of one day to spend redesigning the homepage. Now that the app is in working condition, I wanted to get the point across that it’s usable—no longer just an idea or a half-baked, bug-ridden prototype. But, I didn’t want to ditch everything. &lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/2014-11-20-intro.png&quot; alt=&quot;2014-11-20-intro&quot;&gt; &lt;/p&gt;

&lt;p&gt;The paragraph describing my unhealthy lifestyle as a freelancer is strong. I’d much prefer someone to read that and relate to me on a personal level than replace it with some witty marketing lingo that makes Cushion just a product that appeared overnight. I pulled out a few of my favorite features and listed them underneath. After months of working on the app and speaking with others who use it, the features were obvious. &lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/2014-11-20-tracking.png&quot; alt=&quot;2014-11-20-tracking&quot;&gt; &lt;/p&gt;

&lt;p&gt;The first, project and invoice tracking, is the easy one. This needs to be a feature to even consider using the app. I wanted people to see it and immediately compare it to what they currently use—on a level of both design and functionality. The timeline should look great to them &lt;em&gt;and&lt;/em&gt; introduce something that their current app doesn’t have, like an indication that a project has dragged on past its expected due date. This is a problem that all freelancers experience, but most apps don’t make a big deal of it.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/2014-11-20-client-tendencies.png&quot; alt=&quot;2014-11-20-client-tendencies&quot;&gt; &lt;/p&gt;

&lt;p&gt;Next, I brought up a feature that is incredibly useful, but not exactly glamorous—client tendencies. You can learn so much about your freelance life with the simplest data. Take invoices as an example. All you need is the issue date and paid date of an invoice to reveal your client’s real net. Sure, a client says they are net 45, but in actuality, they are net 63—this is a client of mine. I never thought it would be that far off if it weren’t for Cushion calculating the exact numbers. In my head, I would just think, “Yeah, I remember them paying late, but it’s probably not too bad.” 18 days late is enough to prevent you from paying your rent that month.&lt;/p&gt;

&lt;p&gt;Delay and drag are other client tendencies. When was the last time you had a project that started when it was supposed to or finished on the exact date as planned? The majority of my projects drag on at least a week. It’s not a problem because I get paid for my extra time, but when a projects drags &lt;em&gt;into&lt;/em&gt; another project—that’s a problem. All of a sudden, I’m juggling two projects, one of which is probably at its peak because I’m wrapping up all those last-minute details. &lt;/p&gt;

&lt;p&gt;Every freelancer should know their clients’ tendencies, so they can be better prepared for unexpected scheduling conflicts and late paychecks. Maybe the data is strong enough that you wouldn’t take that project and find yourself in such a stressful situation.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/2014-11-20-goals.png&quot; alt=&quot;2014-11-20-goals&quot;&gt; &lt;/p&gt;

&lt;p&gt;The last feature I focused on is financial goals. When you’re working full-time, you have your salary and that’s that. As a freelaner, however, that number isn’t so matter-of-fact. You have what you absolutely need to make to pay your expenses, but beyond that, you can aim high or just enough to get by. When presented with a bar to fill, there’s extra incentive to fill that bar. Personally, with a month and a half to go in the year, I’m just shy of my target goal and it’s driving me insane. Without this bar, my position is either numbers on a spreadsheet or a general idea in my head. Seeing it visually gives me an instant idea of where I am, if I’m okay, and how close I am to that next goal.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/2014-11-20-timeline.png&quot; alt=&quot;2014-11-20-timeline&quot;&gt; &lt;/p&gt;

&lt;p&gt;Aside from features, two other areas of the app were really important for me to bring up this time—Cushion’s development timeline and this process journal. When your product is in beta, it’s easy to leave it at that with an open-ended schedule that’s just a blur. Some betas run a few months—others last more than a year. To avoid Cushion staying behind closed doors for too long, I wanted to show a timeline for others, but also for myself. Two months into this 6-month beta, I want it to be clear that we’re roughly halfway through. This tells both myself and others that Cushion will launch and that I have a specific plan for that—not just a seemingly never-ending beta.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/2014-11-20-journal.png&quot; alt=&quot;2014-11-20-journal&quot;&gt; &lt;/p&gt;

&lt;p&gt;With the process journal, I felt it needed to be more than just a link in the site’s navigation. It makes no sense that I would dedicate so much time to writing about the progress than making progress, then just hide it and hope that people find it. Speaking to the journal on the homepage also allows me to keep that section in rotation. Instead of the feature list, which is probably solidified for a few more months, I can update to show the latest post, like this one.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/2014-11-20-newsletter.png&quot; alt=&quot;2014-11-20-newsletter&quot;&gt; &lt;/p&gt;

&lt;p&gt;Lastly, I kept the newsletter sign up form, with an added link to the beta page. Shouting on Twitter is easy, but it’s much more effective to speak to those who actually signed up to hear more. I’ve been collecting emails of interested people for months now and after sending my first update email this past week, I realize just how valuable that list is. I love hearing from you and hope I’m doing an okay job of communicating.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;A big thanks to &lt;a href=&quot;http://nicolefenton.com&quot;&gt;Nicole Fenton&lt;/a&gt; for editing the homepage and beta copy.&lt;/em&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Multiple Timelines</title>
      <link>http://cushionapp.com/journal/multiple-timelines</link>
      <pubDate>Tue, 11 Nov 2014 09:14:00 -0500</pubDate>
      <author>Jonnie Hallman</author>
      <guid>http://cushionapp.com/journal/multiple-timelines</guid>
      <description>&lt;p&gt;These past two weeks, I’ve been heads-down, working on an incredibly important feature for Cushion—support for multiple timelines. This feature was not only complex, but also time-sensitive, as beta users were already starting to plan for the next year. In building Cushion, I’ve been actively holding back on specific features that aren’t as prevalent as others. Sometimes these once-dormant features demand your attention much earlier than expected, resulting in a more stressful sprint to finish. This is why we have betas.&lt;/p&gt;

&lt;p&gt;Multiple timelines is one feature I’ve especially been pushing off because of its complexity as well as its never-ending knot of decisions. I knew it would be tough from the start, but I didn’t think it would be this bad. The high-level issues I needed to tackle consisted of establishing a way to navigate between timelines and filtering the data to the selected timeline. This sounds pretty simple until you realize a few scenarios that make it anything but simple, like projects spanning multiple timelines. The deeper I descended into the depths of the feature, the more troubling scenarios I discovered.&lt;/p&gt;

&lt;p&gt;Instead of just glossing over them with a summary, I’d like to highlight as many as I can remember, including both the scenario and my solution.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/2014-11-11-project-span-all.png&quot; alt=&quot;2014-11-11-project-span-all&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Scenario:&lt;/strong&gt; A project spans multiple timelines.&lt;br&gt;
&lt;strong&gt;Solution:&lt;/strong&gt; Include project in all timelines it spans.&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;img src=&quot;/assets/2014-11-11-project-around.png&quot; alt=&quot;2014-11-11-project-around&quot;&gt; &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Scenario:&lt;/strong&gt; A project starts before and finishes after a specific timeline.&lt;br&gt;
&lt;strong&gt;Solution:&lt;/strong&gt; Include project in that timeline.&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;img src=&quot;/assets/2014-11-11-project-ongoing-estimated-finish.png&quot; alt=&quot;2014-11-11-project-ongoing-estimated-finish&quot;&gt; &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Scenario:&lt;/strong&gt; A project is ongoing with an estimated finish date.&lt;br&gt;
&lt;strong&gt;Solution:&lt;/strong&gt; Include project in all timelines it spans, using the maximum of the current date and its estimated finish date as the end.&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;img src=&quot;/assets/2014-11-11-project-no-end-in-sight.png&quot; alt=&quot;2014-11-11-project-no-end-in-sight&quot;&gt; &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Scenario:&lt;/strong&gt; A project is ongoing with no estimated finish date.&lt;br&gt;
&lt;strong&gt;Solution:&lt;/strong&gt; Include project in all timelines it spans as well as all timelines beyond the current date.&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;img src=&quot;/assets/2014-11-11-project-no-dates.png&quot; alt=&quot;2014-11-11-project-no-dates&quot;&gt; &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Scenario:&lt;/strong&gt; A project has no estimated or actual start or finish dates.&lt;br&gt;
&lt;strong&gt;Solution:&lt;/strong&gt; Include project in timeline containing the current date.&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;img src=&quot;/assets/2014-11-11-project-with-invoice.png&quot; alt=&quot;2014-11-11-project-with-invoice&quot;&gt; &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Scenario:&lt;/strong&gt; A project finished in one timeline, but has an invoice in another timeline.&lt;br&gt;
&lt;strong&gt;Solution:&lt;/strong&gt; Include project in both timelines.&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;img src=&quot;/assets/2014-11-11-invoice-issued-before-today.png&quot; alt=&quot;2014-11-11-invoice-issued-before-today&quot;&gt; &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Scenario:&lt;/strong&gt; An unpaid invoice issued before current date timeline.&lt;br&gt;
&lt;strong&gt;Solution:&lt;/strong&gt; Include invoice only in current date timeline.&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;img src=&quot;/assets/2014-11-11-invoice-issued-in-future.png&quot; alt=&quot;2014-11-11-invoice-issued-in-future&quot;&gt; &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Scenario:&lt;/strong&gt; An unpaid invoice issued after current date timeline.&lt;br&gt;
&lt;strong&gt;Solution:&lt;/strong&gt; Include invoice only in timeline containing issue date.&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;img src=&quot;/assets/2014-11-11-invoice-paid-before-today.png&quot; alt=&quot;2014-11-11-invoice-paid-before-today&quot;&gt; &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Scenario:&lt;/strong&gt; A paid invoice issued in a previous timeline.&lt;br&gt;
&lt;strong&gt;Solution:&lt;/strong&gt; Include invoice only in timeline containing paid date.&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;img src=&quot;/assets/2014-11-11-estimate-ongoing-no-estimated-finish.png&quot; alt=&quot;2014-11-11-estimate-ongoing-no-estimated-finish&quot;&gt; &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Scenario:&lt;/strong&gt; The estimate of an ongoing project with no estimated finish date.&lt;br&gt;
&lt;strong&gt;Solution:&lt;/strong&gt; Include estimate in timeline containing current date and all future timelines.&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;img src=&quot;/assets/2014-11-11-estimate-today-and-future.png&quot; alt=&quot;2014-11-11-estimate-today-and-future&quot;&gt; &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Scenario:&lt;/strong&gt; The estimate of a project spanning multiple timelines.&lt;br&gt;
&lt;strong&gt;Solution:&lt;/strong&gt; Include estimate in timeline containing current date and any future timeline containing project.&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;img src=&quot;/assets/2014-11-11-estimate-no-dates.png&quot; alt=&quot;2014-11-11-estimate-no-dates&quot;&gt; &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Scenario:&lt;/strong&gt; The estimate of a project with no dates.&lt;br&gt;
&lt;strong&gt;Solution:&lt;/strong&gt; Include estimate in timeline containing current date.&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;Phew. Now that we got those out of the way, the remaining problem exists in navigating these timelines. I wanted it to be dead-simple to switch between them. You should be able to quickly glance several years in the past and return to the current timeline just as easily. For months, I thought of reusing the current timeline tab for more than just indicating the current timeline. I even had dreams of the interaction—I just wondered if it would actually work out as planned.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/2014-11-11-timeline-switch.gif&quot; alt=&quot;2014-11-11-timeline-switch&quot;&gt; &lt;/p&gt;

&lt;p&gt;Luckily, it did. When you’re not in the scheduling or budgeting view, the current timeline tab simply navigates to your default view. Then, if you hover it, a down arrow appears below it, prompting another click that expands the timeline menu. From there, you can select a different timeline and quickly navigate to it. To switch back, simply use the menu again to select the current timeline.&lt;/p&gt;

&lt;p&gt;Selecing a timeline appends a parameter to the URL, indicating the timeline ID, which then grabs both the date range for the scheduling view and the financial goals for the budgeting view. Without the parameter, Cushion uses the default timeline, which can be set in the Timelines page. Typically, this will be the timeline that contains the current date.&lt;/p&gt;

&lt;p&gt;As you could imagine, this was a whirlwind feature to finish, and after two weeks, I’m so relieved to be able to check it off the list. Now that it’s finished, I plan to send out even more invites for the paid beta. If you’re interested, &lt;a href=&quot;http://twitter.com/cushionapp&quot;&gt;tweet me&lt;/a&gt; with your email address.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Archiving and Estimate Differences</title>
      <link>http://cushionapp.com/journal/archiving-and-estimate-differences</link>
      <pubDate>Wed, 29 Oct 2014 11:40:00 -0400</pubDate>
      <author>Jonnie Hallman</author>
      <guid>http://cushionapp.com/journal/archiving-and-estimate-differences</guid>
      <description>&lt;p&gt;This past week, I added two big features. Not big in the sense of workload or scale, but big in terms of value. Both are incredibly useful and have personally made Cushion feel like a more serious contender.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/2014-10-29-archive.png&quot; alt=&quot;2014-10-29-archive&quot;&gt; &lt;/p&gt;

&lt;p&gt;The first is archiving. Previously, every client, project, and invoice you created would always remain present, regardless of whether it were still active in your day-to-day. Nearing the end of the year, that 1-day project you worked on in January would still appear aside your current projects. Now, you have the ability to archive items.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/2014-10-29-archiving.gif&quot; alt=&quot;2014-10-29-archiving&quot;&gt; &lt;/p&gt;

&lt;p&gt;Archiving does two things. In the table view, archiving allows you to toggle the visibility of any archived item using a switch in the top left. In project forms and invoice forms, archived items are filtered from the dropdown menus. With this, you no longer need to sift through &lt;em&gt;every&lt;/em&gt; project when creating a new invoice.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/2014-10-29-archived-by-client.png&quot; alt=&quot;2014-10-29-archived-by-client&quot;&gt; &lt;/p&gt;

&lt;p&gt;Archiving also cascades. This means that if you archive a project, all of its invoices will be marked as archived, too. And, if you archive a client, all of its projects &lt;em&gt;and&lt;/em&gt; invoices will be marked as archived. This is not only useful for old projects, but also for potential projects that are either on hold or so far away that you don’t need to think about them yet.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/2014-10-29-gain-loss.png&quot; alt=&quot;2014-10-29-gain-loss&quot;&gt; &lt;/p&gt;

&lt;p&gt;The second super useful feature is a new column in the budget view, called “gain/loss”. This column takes your projects’ estimates and compares them to your actual income for the projects, presenting it in an easy-to-read percentage. The percentage is then colored green for positive values and red for negative values. Even without reading the numbers, you’ll have an idea of how well you’re estimating.&lt;/p&gt;

&lt;p&gt;Just like income columns, the “gain/loss” column has a “sum” in the table footers. It’s not just a simple sum of each row’s percentage, but rather a comparison of your total estimates to your total income. If it’s in the red, you know you either need to better estimate your projects or bump up your rate. This column also exists in the client budget view, so you can see per-client how close or far off you were.&lt;/p&gt;

&lt;p&gt;I’m really excited about these new features as they add even more value to an app that has become indispensable to my workflow. Starting in November, I’m doubling the number of invites I send out for the paid beta this month, so if you’re interested in using Cushion early, &lt;a href=&quot;http://twitter.com/cushionapp&quot;&gt;let me know&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Multiple Financial Goals</title>
      <link>http://cushionapp.com/journal/multiple-financial-goals</link>
      <pubDate>Tue, 21 Oct 2014 21:38:00 -0400</pubDate>
      <author>Jonnie Hallman</author>
      <guid>http://cushionapp.com/journal/multiple-financial-goals</guid>
      <description>&lt;p&gt;&lt;img src=&quot;/assets/2014-10-21-goals.png&quot; alt=&quot;2014-10-21-goals&quot;&gt; &lt;/p&gt;

&lt;p&gt;A few weeks ago, a beta user suggested the idea of multiple financial goals for the budget timeline. At the time, there was only one goal in Cushion, which made it somewhat difficult to picture the year. Do I set the goal to what I need to make or what I want to make?—these are two very different goals. Because of this constant confusion, I replaced the single goal with three—minimum, target, and stretch.&lt;/p&gt;

&lt;p&gt;When considering your finances, it’s good to think of what you absolutely need to make to stay alive and pay the bills—your bare minimum. From there, you can aim for a higher target that allows you to do more than just survive, like go out to eat more often or take a cab instead of the subway. And, if you reach that target, you can then try for more, which might be enough to add a vacation to your year.&lt;/p&gt;

&lt;p&gt;These goals are important in the freelance life because there’s really no cap on how much you can make. Since you have no salary, you can decide how much you want to make beyond covering your expenses, granted the work is available. If you want to overload your schedule for a month in order to take a month off, you can do that. If you want to work consistently and make a killing, that’s cool, too.&lt;/p&gt;

&lt;p&gt;Personally, I don’t do a great job of aiming high. I tend to make enough to pay my minimum, then I invest the extra time in my personal projects. Recently, I’ve been investing any income over my minimum into buying more of my own time, as if I’m my own client. I’m betting on myself and my productivity. Maybe two weeks of full-time Cushion could amount to more than a two-week client gig. And maybe, with Cushion, I could reach my stretch goal all on my own.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
